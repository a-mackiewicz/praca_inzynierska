{"remainingRequest":"D:\\inzynierka\\projekt\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\inzynierka\\projekt\\src\\components\\Patient.vue?vue&type=template&id=959bdaf6&","dependencies":[{"path":"D:\\inzynierka\\projekt\\src\\components\\Patient.vue","mtime":1617275708836},{"path":"D:\\inzynierka\\projekt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\inzynierka\\projekt\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\inzynierka\\projekt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\inzynierka\\projekt\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}