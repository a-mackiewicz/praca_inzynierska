{"remainingRequest":"D:\\inzynierka\\projekt\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\inzynierka\\projekt\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\inzynierka\\projekt\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\inzynierka\\projekt\\src\\components\\Visits.vue?vue&type=template&id=7eee7eb8&","dependencies":[{"path":"D:\\inzynierka\\projekt\\src\\components\\Visits.vue","mtime":1616091905441},{"path":"D:\\inzynierka\\projekt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1616105101409},{"path":"D:\\inzynierka\\projekt\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1616105107840},{"path":"D:\\inzynierka\\projekt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1616105101409},{"path":"D:\\inzynierka\\projekt\\node_modules\\vue-loader\\lib\\index.js","mtime":1616105107840}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}