{"remainingRequest":"D:\\inzynierka\\projekt\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\inzynierka\\projekt\\src\\components\\PatientPanel.vue?vue&type=template&id=1398c6af&","dependencies":[{"path":"D:\\inzynierka\\projekt\\src\\components\\PatientPanel.vue","mtime":1618854533638},{"path":"D:\\inzynierka\\projekt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\inzynierka\\projekt\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\inzynierka\\projekt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\inzynierka\\projekt\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}