{"remainingRequest":"D:\\inzynierka\\projekt\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\inzynierka\\projekt\\src\\components\\Calendar.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\inzynierka\\projekt\\src\\components\\Calendar.vue","mtime":1615931030975},{"path":"D:\\inzynierka\\projekt\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\inzynierka\\projekt\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\inzynierka\\projekt\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\inzynierka\\projekt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\inzynierka\\projekt\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYnRuLXN1Y2Nlc3MgewogICAgbWFyZ2luLXJpZ2h0OiAxMHB4Owp9Cg=="},{"version":3,"sources":["Calendar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA;AACA;AACA","file":"Calendar.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"row\"> \r\n        <div class=\"col-md-12 p-0\">\r\n            <div class=\"table-responsive\">\r\n            <table class=\"table table-bordered table-sm align-self-end mb-0\"  style=\";margin-top:0px;margin-bottom: 0;table-layout: fixed;\">\r\n                <thead class=\"text-light\" style=\"background-color: #8b0000;\">\r\n                    <tr>\r\n                        <th>Niedziela</th> <th>Poniedziałek</th> <th>Wtorek</th> <th>Środa</th> <th>Czwartek</th> <th>Piątek</th> <th>Sobota</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody id=\"tbodyCalendar\">\r\n                    <!--<tr style=\"height:calc(16.67vh - 14px)\">\r\n                        <td id=\"c1\"><tr v-for=\"visit in activeVisits(this.calendar[0])\" :key=\"visit._id\" ><td><b>{{ visit.hour }}:</b> {{ activePatients(visit.patientId)[0].name }} {{ activePatients(visit.patientId)[0].surname }}, {{ activePatients(visit.patientId)[0].pesel }}</td></tr></td>-->\r\n                    \r\n                </tbody>\r\n            </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import axios from \"axios\";\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                Visits: [],\r\n                Patients: [],\r\n                genVars: [0, 0, 0, 0],\r\n\r\n            }\r\n        },\r\n        created() {\r\n                let apiURL = 'http://localhost:4000/api/patients';\r\n                axios.get(apiURL).then(res => {\r\n                    this.Patients = res.data;\r\n                    apiURL = 'http://localhost:4000/api/visits';\r\n                    axios.get(apiURL).then(res => {\r\n                        this.Visits = res.data;\r\n\r\n                        var today = new Date();\r\n                        this.genVars[0] = today.getFullYear(); // rok\r\n                        this.genVars[1] = String(today.getMonth() + 1).padStart(2, '0'); // miesiac\r\n                        this.genVars[2] = String(today.getDate()).padStart(2, '0'); // dzien\r\n                        this.generatemonth();\r\n\r\n                    }).catch(error => {\r\n                        console.log(error)\r\n                    });\r\n                }).catch(error => {\r\n                    console.log(error)\r\n                });\r\n           \r\n        },\r\n        computed: {\r\n        },\r\n        methods: {\r\n            generatemonth(){\r\n                \r\n                var startDay = new Date(this.genVars[0], this.genVars[1], 0).getDay(); // nazwa pierwszego dnia miesiaca\r\n                var numberOfdays = new Date(this.genVars[0], this.genVars[1], 0).getDate(); // ilosc dni w miesiacu\r\n\r\n                var numerOfRows = 7 - (((startDay - 2) + numberOfdays) % 7);\r\n                numerOfRows = numerOfRows + ((startDay - 2) + numberOfdays);\r\n\r\n                var k = 1;\r\n                var l = 1;\r\n                for(var i=0;i<(numerOfRows/7);i++) {\r\n                var tr = document.createElement('tr');\r\n                tr.style.height = 'calc(' + (100 / (numerOfRows/7)) + 'vh - ' + (84 / (numerOfRows/7)) + 'px)'\r\n                document.getElementById(\"tbodyCalendar\").appendChild(tr);\r\n                    for (var j=0; j<7;j++){\r\n                        var td = document.createElement('td');\r\n                        td.style =\"padding: 0;\"\r\n                        if((l >= startDay-1) && ( l < ((startDay - 1) + numberOfdays))) {\r\n                            td.appendChild(document.createTextNode(k));\r\n                            var ul = document.createElement('ul');\r\n                            ul.className = \"list-group list-group-flush\";\r\n                            ul.style.height = 'calc(' + (100 / (numerOfRows/7)) + 'vh - ' + (84 / (numerOfRows/7)) + 'px - 18px)'\r\n                            ul.style.overflow = \"auto\";\r\n                            var res = this.activeVisits(this.genVars[0], this.genVars[1], k);\r\n                            res = res.sort((a, b) => { return a.hour.split(':').reduce((acc,time) => (60 * acc) + +time) - b.hour.split(':').reduce((acc,time) => (60 * acc) + +time);});\r\n                            for(var m=0; m<res.length; m++){\r\n                                var li = document.createElement('li');\r\n                                li.className = \"list-group-item\";\r\n                                li.style = \"padding: 2px;font-size:12px\"\r\n                                var span = document.createElement('span');\r\n                                span.className = \"badge badge-primary badge-pill\";\r\n                                console.log(res[m].hour.utc('10:00','hh:mm').add(1,'hour').format('hh:mm'));\r\n                                span.appendChild(document.createTextNode(res[m].hour + ' - '));\r\n                                li.appendChild(span);\r\n                                var tempPatient = this.activePatients(res[m].patientId);\r\n                                li.appendChild(document.createTextNode(' ' + tempPatient[0].name + ' ' + tempPatient[0].surname + ', ' + tempPatient[0].pesel));\r\n                                ul.appendChild(li);\r\n                            }\r\n                            td.appendChild(ul);\r\n                            k++;\r\n                        }\r\n                        document.getElementById(\"tbodyCalendar\").lastElementChild.appendChild(td)\r\n                        l++;\r\n                    }\r\n                }\r\n            },\r\n            activeVisits(ty, tm, td) {\r\n                return this.Visits.filter(function(i) {\r\n                    if(i.date[0] == ty && i.date[1] == tm && i.date[2] == td){\r\n                        return i;\r\n                    }\r\n                })\r\n            },\r\n            activePatients(tempId) {\r\n                return this.Patients.filter(i => i._id == tempId)\r\n            },\r\n            deletePatients(id){\r\n                let apiURL = `http://localhost:4000/api/delete-patient/${id}`;\r\n\r\n                if (window.confirm(\"Chcesz usunąć pacjenta?\")) {\r\n                    axios.delete(apiURL).then(() => {\r\n                    this.$router.push('/list_patients');\r\n                    window.location.reload();\r\n                    }).catch(error => {\r\n                        console.log(error)\r\n                    });\r\n                }\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .btn-success {\r\n        margin-right: 10px;\r\n    }\r\n</style>"]}]}