{"remainingRequest":"D:\\inzynierka\\projekt\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\inzynierka\\projekt\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\inzynierka\\projekt\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\inzynierka\\projekt\\src\\components\\Picture.vue?vue&type=template&id=4a02dffe&","dependencies":[{"path":"D:\\inzynierka\\projekt\\src\\components\\Picture.vue","mtime":1616932338086},{"path":"D:\\inzynierka\\projekt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\inzynierka\\projekt\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\inzynierka\\projekt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\inzynierka\\projekt\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicm93IiB9LCBbCiAgICBfYygiZGl2IiwgewogICAgICBzdGF0aWNDbGFzczogImNvbC1zbSBib3JkZXItcmlnaHQiLAogICAgICBzdGF0aWNTdHlsZTogeyAibWFyZ2luLXJpZ2h0IjogIjE1cHgiLCAiYmFja2dyb3VuZC1jb2xvciI6ICIjZjNmM2YzIiB9CiAgICB9KSwKICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLWF1dG8iLCBzdGF0aWNTdHlsZTogeyB3aWR0aDogIjc1M3B4IiB9IH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3ciIH0sIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbCBweC0xIHB0LTEgcGItMSIgfSwgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyb3cgcC0xIiwKICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICAgICAgICAgd2lkdGg6ICI2NTNweCIsCiAgICAgICAgICAgICAgICBoZWlnaHQ6ICJjYWxjKDEwMHZoIC0gNjFweCkiLAogICAgICAgICAgICAgICAgb3ZlcmZsb3c6ICJoaWRkZW4iCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiZm9ybSIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZm9ybS1pbmxpbmUiLAogICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgIHN1Ym1pdDogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQucHJldmVudERlZmF1bHQoKQogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5oYW5kbGVVcGRhdGVGb3JtKCRldmVudCkKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5waWN0dXJlLmhlYWQsCiAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJwaWN0dXJlLmhlYWQiCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImZvcm0tY29udHJvbCBmb3JtLWNvbnRyb2wtc20gbXItMSIsCiAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgd2lkdGg6ICI0NTBweCIgfSwKICAgICAgICAgICAgICAgICAgICBhdHRyczogeyB0eXBlOiAidGV4dCIgfSwKICAgICAgICAgICAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogX3ZtLnBpY3R1cmUuaGVhZCB9LAogICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgewogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kc2V0KF92bS5waWN0dXJlLCAiaGVhZCIsICRldmVudC50YXJnZXQudmFsdWUpCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4gYnRuLWRhcmsgYnRuLXNtIGQtaW5saW5lIiwKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IHdpZHRoOiAiMTQ5cHgiIH0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIlphcGlzeiIpXQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgewogICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAgICAgICAgICAgd2lkdGg6ICI2NTNweCIsCiAgICAgICAgICAgICAgICAgIGhlaWdodDogImNhbGMoMTAwdmggLSAxMjFweCkiLAogICAgICAgICAgICAgICAgICBvdmVyZmxvdzogImF1dG8iCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJkcmF3aW5nIiB9LAogICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgbW91c2Vkb3duOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICBfdm0ubW91c2VEb3duID0gMSArICRldmVudC5idXR0b24KICAgICAgICAgICAgICAgICAgICBfdm0udHJhbnNmcm9tRnVuYygkZXZlbnQucGFnZVgsICRldmVudC5wYWdlWSkKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgbW91c2Vtb3ZlOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnRyYW5zZnJvbUZ1bmMoJGV2ZW50LnBhZ2VYLCAkZXZlbnQucGFnZVkpCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KQogICAgICAgICAgICBdCiAgICAgICAgICApCiAgICAgICAgXSksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wgcHgtMSBwdC0xIHBiLTEiIH0sIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICAgICAibWFyZ2luLXRvcCI6ICI2MHB4IiwKICAgICAgICAgICAgICAgIHdpZHRoOiAiMTAzcHgiLAogICAgICAgICAgICAgICAgaGVpZ2h0OiAiY2FsYygxMDB2aCAtIDYxcHgpIiwKICAgICAgICAgICAgICAgIG92ZXJmbG93OiAiaGlkZGVuIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJoNiIsIFtfdm0uX3YoIldpZWxrb8WbxIciKV0pLAogICAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZm9ybS1jb250cm9sLXJhbmdlIiwKICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICAgICAgICJtYXJnaW4tdG9wIjogIjEzMHB4IiwKICAgICAgICAgICAgICAgICAgIm1hcmdpbi1ib3R0b20iOiAiMTMwcHgiLAogICAgICAgICAgICAgICAgICAibWFyZ2luLWxlZnQiOiAiLTEwMHB4IiwKICAgICAgICAgICAgICAgICAgd2lkdGg6ICIyNTBweCIsCiAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogInJvdGF0ZSgyNzBkZWcpIiwKICAgICAgICAgICAgICAgICAgIi1tb3otdHJhbnNmb3JtIjogInJvdGF0ZSgyNzBkZWcpIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGF0dHJzOiB7IHR5cGU6ICJyYW5nZSIgfSwKICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgIGlucHV0OiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnNpemVGdW5jKCRldmVudC50YXJnZXQudmFsdWUpCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICBfYygiaDYiLCBbX3ZtLl92KCJPYnJhY2FuaWUiKV0pLAogICAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZm9ybS1jb250cm9sLXJhbmdlIiwKICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICAgICAgICJtYXJnaW4tdG9wIjogIjEzMHB4IiwKICAgICAgICAgICAgICAgICAgIm1hcmdpbi1sZWZ0IjogIi0xMDBweCIsCiAgICAgICAgICAgICAgICAgIHdpZHRoOiAiMjUwcHgiLAogICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06ICJyb3RhdGUoMjcwZGVnKSIsCiAgICAgICAgICAgICAgICAgICItbW96LXRyYW5zZm9ybSI6ICJyb3RhdGUoMjcwZGVnKSIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBhdHRyczogeyB0eXBlOiAicmFuZ2UiIH0sCiAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5yb3RhdGVGdW5jKCRldmVudC50YXJnZXQudmFsdWUpCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KQogICAgICAgICAgICBdCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSkKICAgIF0pLAogICAgX2MoImRpdiIsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJjb2wtc20gYm9yZGVyLWxlZnQiLAogICAgICBzdGF0aWNTdHlsZTogeyAibWFyZ2luLWxlZnQiOiAiMTVweCIsICJiYWNrZ3JvdW5kLWNvbG9yIjogIiNmM2YzZjMiIH0KICAgIH0pCiAgXSkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}